#+TITLE: Emacs config
#+AUTHOR: wcarlsen
#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs.d/init.el :results silent

* Package manager
** Straight
Setup straight package manager.

#+begin_src emacs-lisp
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))
#+end_src

** Straight use-package
Setup straught integration with use-package.

#+begin_src emacs-lisp
(straight-use-package 'use-package)
(setq straight-use-package-by-default t)
#+end_src

* Basics
** Better defaults
Better defaults disables menu bars among other things.

#+begin_src emacs-lisp
(use-package better-defaults)
#+end_src

** Backup/swap files
Disable stupid backup/swap files.

#+begin_src emacs-lisp
(setq make-backup-files nil)
(setq auto-save-default nil)
#+end_src

** Sounds
Disable ring bell.

#+begin_src emacs-lisp
(setq ring-bell-function 'ignore)
#+end_src

* Org
** Pretty bullets
Configure pretty bullets.

#+begin_src emacs-lisp
(use-package org-bullets
  :config
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+end_src

** Template snippets
Org templates and add source code block snippit.

#+begin_src emacs-lisp 
(require 'org-tempo)
(add-to-list 'org-structure-template-alist '("el" . "src emacs-lisp"))
(add-to-list 'org-structure-template-alist '("sh" . "src shell"))
#+end_src

** Auto tangle
Autotangle configuration files.

#+begin_src emacs-lisp
(defun efs/org-babel-tangle-config ()
  (when (string-equal (buffer-file-name)
		      (expand-file-name "~/emacs.org"))
    ;; Dynamic scoping to the rescue
    (let ((org-confirm-babel-evaluate nil))
      (org-babel-tangle))))

(add-hook 'org-mode-hook (lambda () (add-hook 'after-save-hook #'efs/org-babel-tangle-config)))
#+end_src
* Git
** Magit
Git user interface.

#+begin_src emacs-lisp
(use-package magit)
#+end_src
** Git-gutter
Visual representation of changes to files in git.

#+begin_src emacs-lisp
(use-package git-gutter
  :config
  (global-git-gutter-mode +1)
  (custom-set-variables '(git-gutter:update-interval 2))
  (custom-set-variables
  '(git-gutter:modified-sign "~")
  '(git-gutter:added-sign "+")
  '(git-gutter:deleted-sign "-"))
  (set-face-background 'git-gutter:modified "yellow")
  (set-face-foreground 'git-gutter:added "green")
  (set-face-foreground 'git-gutter:deleted "red"))
#+end_src

* Project management
** Projectile
Setup project interaction libary for accessing multiple projects.

#+begin_src emacs-lisp
(use-package projectile
  :config
  (projectile-mode +1)
  (define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map)
  (setq projectile-project-search-path 
  '("~/" "~/spaghetti/" "~/spaghetti/dfds/"))
  (projectile-discover-projects-in-search-path))
#+end_src

* Languages
** Terraform
Terraform hcl syntax goodies.

#+begin_src emacs-lisp
(use-package terraform-mode)
#+end_src

* Theme
** Wombat
Setup dark theme.

#+begin_src emacs-lisp
(load-theme 'wombat t)
#+end_src
