# add source ~/.aliasrc to ~/.zshrc
# Zsh
alias zshrc="$EDITOR ~/.zshrc"
alias szsh="source ~/.zshrc"

# Alias
alias aliasrc="$EDITOR ~/.aliasrc"

# Vim
alias virc="nvim ~/.config/nvim/init.vim"
alias vimrc="nvim ~/.config/nvim/init.vim"
alias nvimrc="nvim ~/.config/nvim/init.vim"
alias vi="nvim"
alias vim="nvim"

# Nano
alias nano="nano -l -c"
alias nanorc="nano ~/.nanorc"

# Vscode
alias code="code ."

# Hyper
alias hyperc="$EDITOR ~/.hyper.js"

# Alacritty
alias alacritrc="$EDITOR ~/.config/alacritty/alacritty.yml"

# Tmux
alias tmuxcf="$EDITOR ~/.tmux.conf"

# Brew
alias brewu="brew update && brew upgrade && brew cleanup"

# Apt
alias aptu="sudo apt update && sudo apt upgrade -y"

# Pacman
alias pacu="sudo pacman -Syu"

pacs() {
	sudo pacman -Syy $(pacman -Ssq | fzf -m --preview="pacman -Si {}" --preview-window=:hidden --bind=space:toggle-preview)
}

# Yay
alias yayu="yay -Syu"
alias nay="DOWNGRADE_FROM_ALA=1 downgrade $1"

yays() {
	yay $(yay -Slq | fzf -m --preview="yay -Si {}" --preview-window=:hidden --bind=space:toggle-preview)
}

yi() { 
	SELECTED_PKGS="$(yay -Slq | fzf --header='Install packages' -m --preview 'yay -Si {1}')"
	if [ -n "$SELECTED_PKGS" ]; then
		yay -S $(echo $SELECTED_PKGS)
	fi
}

yr() { 
	SELECTED_PKGS="$(yay -Qsq | fzf --header='Remove packages' -m --preview 'yay -Si {1}')"
	if [ -n "$SELECTED_PKGS" ]; then
		yay -Rns $(echo $SELECTED_PKGS)
	fi
}

# Npm
alias npmlg="npm list -g --depth=0"

# Find
ff() {
	find . -name "*$1*"
}

# Git
alias gcl="git clean -df"
alias gitcf="$EDITOR ~/.gitconfig"
alias gitignore="$EDITOR .gitignore"

groot() {
	cd $(git rev-parse --show-toplevel)
}

push2prod() {
	git checkout master
	git pull
	git checkout production
	git pull
	git merge master
	git push
	git checkout master
}

alias excuse="curl -s https://whatthecommit.com/index.txt"
alias yolo="git commit -m '$(curl -s https://whatthecommit.com/index.txt)'"

# Ctags
tags() {
	cwd=$(pwd)
	groot
	ctags -R *
	cd "$cwd"
}

# Rsync
rsignoreexisting () {
	rsync -razv --ignore-existing "$1" "$2"
}

rsrpi() {
	rsync --remove-source-files -avz -e ssh pi@rpi2.local:/home/pi/torrents/complete/ .
}

alias rsyncscp="rsync --archive --checksum --compress --human-readable --itemize-changes --rsh=ssh --stats --verbose"

# Ag
#agcust () {
	#ag -G \\*."$1" "$2"
#}

# Grep
alias grep="grep --color=always"

# Ip
alias getip="ifconfig | grep 'inet ' | grep -v '127.0.0.1'"

# Python
alias actenv="source .venv/bin/activate"
alias setupenv="virtualenv -p python3 .venv"
alias prun="pipenv run"

# Oh-my-zsh plugins
findalias () {
	alias | grep "$1"
}

# Ssh
removessh () {
	ssh-keygen -R "$1"
}

alias rpi2="ssh pi@rpi2.local"

# Scp
alias scp2remote="scp $1 $2:$3" # scp {{local_file}} {{remote_host}}:{{/path/remote_file}}
alias scp2local="scp $1:$2 $3" # scp {{remote_host}}:{{/path/remote_file}} {{/path/local_dir}}

# Mkdir
alias mmkdir="mkdir -p"

# Terragrunt cache
alias rmcache="sudo rm -rf **/.terragrunt-cache"

# Ls
alias las="la -S"

# Exa
alias l="exa --long --header --group-directories-first --git -a"

# Docker
alias dockerstart="sudo systemctl start docker.service"
alias dockerstop="sudo systemctl stop docker.service"
alias dockertag="docker tag $1 $2" # where $1 is local image name and $2 is repo name"
alias dockerpush="docker push $1" # where $1 is repo name
alias dockerrunprime="docker run -it -v $1:/code -e AWS_ACCESS_KEY_ID=$2 -e AWS_SECRET_ACCESS_KEY=$3 -e TF_VAR_access_key_master=$4 -e TF_VAR_secret_key_master=$5 -e -w=/code --entrypoint /bin/bash dfdsdk/prime-pipeline:$6"
alias dcu="docker-compose up --build"
alias dcd="docker-compose down"
alias dockerprune="docker system prune -a"

dockerrmi() {
	docker rmi -f $(docker images -q)
}

dockerrm() {
	docker rm -f $(docker ps -a -q)
}

dockerb() {
	docker build . -t "$1"
}

dockerrenv() {
	docker run -p "$1" --env-file ./"$2" "$3"
}

# Mv
mvmedia() {
	mv -v **/*."$1" "$2" 2>/dev/null
}

moviemv() {
	dest=~/Movies/movies/
	mvmedia mp4 $dest mvmedia mkv $dest mvmedia avi $dest
}

# Netcat
alias nclisten="nc -l -p $1" # $1 is port
alias ncconnect="nc $1 $2" # $1 is host and $2 port

# Aws
alias setawsacc="export AWS_DEFAULT_PROFILE=$1"
alias awsrc="$EDITOR ~/.aws/credentials"

awsasgunhealthy() {
	NODEID="$1"
	aws --region eu-west-1 autoscaling set-instance-health --instance-id $NODEID --health-status Unhealthy
}

awsgetinstid() {
	NODENAME="$1"
	aws --region eu-west-1 ec2 describe-instances --filters "Name=private-dns-name,Values=$NODENAME" --query "Reservations[].Instances[].InstanceId" --output text
}

# Terragrunt
alias terragruntoverwrite="terragrunt $1 --terragrunt-source-update --terragrunt-source $2" # $1 is the command and $2 is the path remember / in the end"

# Cat or bat
alias bat="bat -p"
alias baty="bat -p -l yaml"

# Kubectx
alias kx="kubectx"

# Kubens
alias kb="kubens"

# Kubectl
alias kdrainnode="kubectl drain $1 --ignore-daemonsets --delete-local-data --grace-period=30 --timeout=2m --force"

# Fuck
alias fu="fuck"
alias plz="fuck"

# Nautilus
alias openf="nautilus . &"

# Nmap
alias ipscan="nmap -sn 192.168.1.0/24"

# Systemctl
alias system="systemctl"

# Journalctl
alias journal="journalctl"

# Youtube-dl
alias downloadmp3="youtube-dl -x --audio-format mp3 $1"

# Pwgen
alias pw="pwgen -cnys 10"

# Du
alias duh="du -h -d 0 [^.*]*"

# Xdg-open
alias open="xdg-open"

# Misc
#zopen() {
	#fd -t f -H -I | fzf -m --preview="xdg-mime query default {}" | xargs -ro -d "\n" xdg-open 2>&-
#}

zcd() {
	cd $HOME && cd "$(fd -t d | fzf --preview="tree -L 1 {}" --bind="space:toggle-preview" --preview-window=:hidden)"
}
